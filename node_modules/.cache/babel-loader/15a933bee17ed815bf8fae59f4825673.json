{"ast":null,"code":"var _jsxFileName = \"/Users/mathewmozaffari/Desktop/Current Clients/AGM Basements/src/speer/agm_basements/src/Containers/PaymentReceipt.js\";\nimport React, { Component, Suspense, lazy } from 'react';\nimport { Helmet } from 'react-helmet';\nimport GeneralBanner from '../Common/BannerParts/GeneralBanner';\nimport BraintreeComponent from './Braintree';\nimport Modal from 'react-modal';\nconst customStyles = {\n  content: {\n    borderRadius: '20px',\n    backgroundColor: '#00aede',\n    width: '40%',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nclass PaymentReceipt extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      amount: 150,\n      planname: 'DCA Charge',\n      isPaymentSucceedModal: false,\n      isPaymentSucceed: false,\n      name: '',\n      address: '',\n      email: '',\n      phone: '',\n      transaction: ''\n    };\n\n    this.toggleModal = () => {\n      this.setState(state => ({\n        isPaymentSucceedModal: !state.isPaymentSucceedModal\n      }));\n    };\n\n    this.getTodayDate = () => {\n      var today = new Date(),\n          dd = today.getDate(),\n          mm = today.getMonth() + 1,\n          yyyy = today.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      var today = mm + '/' + dd + '/' + yyyy;\n      return today;\n    };\n  }\n\n  componentWillMount() {\n    let routeName = window.location.pathname,\n        amt = 150;\n\n    if (routeName === \"/payment-receipt-150\") {\n      amt = 150;\n    } else if (routeName === \"/payment-receipt-250\") {\n      amt = 250;\n    } else if (routeName === \"/payment-receipt-350\") {\n      amt = 350;\n    }\n\n    this.setState({\n      amount: amt\n    });\n  }\n\n  paymentSucceed(data) {\n    this.setState({\n      isPaymentSucceed: true,\n      transaction: data,\n      isPaymentSucceedModal: true\n    });\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      transaction,\n      address,\n      phone,\n      amount,\n      planname,\n      isPaymentSucceed,\n      isPaymentSucceedModal\n    } = this.state;\n    var transactionHTML = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 31\n      }\n    }, \"NA\");\n\n    if (transaction && transaction.id) {\n      transactionHTML = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: transaction.creditCard.imageUrl,\n        alt: transaction.creditCard.cardType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }), transaction.creditCard.cardType);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"AGM Basements | Basement Renovations | Payment\"), /*#__PURE__*/React.createElement(\"meta\", {\n      name: \"description\",\n      content: \"AGM Basements has a 4.5-star rating with over 200 Google Reviews as GTA\\u2019s top-rated basement renovations we provide 100% customer satisfaction.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(GeneralBanner, {\n      title: \"Payment Receipt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"payment-receipt-container\",\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, isPaymentSucceed ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6 payment-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"card-styles\",\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-title card-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    }, \"Client Information:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-data payment-reciept\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: input => {\n        this['name'] = input;\n      },\n      type: \"text\",\n      className: \"hosted-field\",\n      placeholder: \"Full Name\",\n      onChange: e => {\n        this.setState({\n          name: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: input => {\n        this['email'] = input;\n      },\n      type: \"email\",\n      className: \"hosted-field\",\n      placeholder: \"email@emailaddress.com\",\n      onChange: e => {\n        this.setState({\n          email: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: input => {\n        this['address'] = input;\n      },\n      type: \"text\",\n      className: \"hosted-field\",\n      placeholder: \"Address, City, State, Postal Code\",\n      onChange: e => {\n        this.setState({\n          address: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: input => {\n        this['phone'] = input;\n      },\n      type: \"phone\",\n      className: \"hosted-field\",\n      placeholder: \"416 XXX-XXXX\",\n      onChange: e => {\n        this.setState({\n          phone: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-start mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, isPaymentSucceed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"card-styles\",\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 45\n      }\n    }, \"Date Recieved\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 45\n      }\n    }, this.getTodayDate()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 45\n      }\n    }, \"Payment Method\"), transactionHTML, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 45\n      }\n    }, \"Cheque/Ref. No.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, transaction && transaction.id), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 45\n      }\n    }, \"Cost\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 45\n      }\n    }, \"$\", amount.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    })) : /*#__PURE__*/React.createElement(BraintreeComponent, {\n      name: name,\n      email: email,\n      address: address,\n      phone: phone,\n      amount: amount,\n      planname: planname,\n      paymentSucceed: this.paymentSucceed.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: isPaymentSucceedModal,\n      onRequestClose: this.toggleModal,\n      style: customStyles,\n      shouldCloseOnOverlayClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, \"Success! Your payment was completed and an email confirmation has been sent.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action-button\",\n      onClick: () => {\n        this.setState({\n          isPaymentSucceedModal: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, \"Close\"))))));\n  }\n\n}\n\nPaymentReceipt.propTypes = {};\nexport default PaymentReceipt;","map":{"version":3,"sources":["/Users/mathewmozaffari/Desktop/Current Clients/AGM Basements/src/speer/agm_basements/src/Containers/PaymentReceipt.js"],"names":["React","Component","Suspense","lazy","Helmet","GeneralBanner","BraintreeComponent","Modal","customStyles","content","borderRadius","backgroundColor","width","top","left","right","bottom","marginRight","transform","PaymentReceipt","state","amount","planname","isPaymentSucceedModal","isPaymentSucceed","name","address","email","phone","transaction","toggleModal","setState","getTodayDate","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","componentWillMount","routeName","window","location","pathname","amt","paymentSucceed","data","render","transactionHTML","id","creditCard","imageUrl","cardType","input","e","target","value","toFixed","bind","propTypes"],"mappings":"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","sourcesContent":["import React, { Component, Suspense, lazy } from 'react';\nimport { Helmet } from 'react-helmet';\nimport GeneralBanner from '../Common/BannerParts/GeneralBanner';\nimport BraintreeComponent from './Braintree';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n    content : {\n        borderRadius          : '20px',\n        backgroundColor       : '#00aede',\n        width                 : '40%',\n        top                   : '50%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)'\n    }\n};\n\nclass PaymentReceipt extends Component {\n    static propTypes = {\n    };\n\n    state = {\n        amount: 150,\n        planname: 'DCA Charge',\n        isPaymentSucceedModal: false,\n        isPaymentSucceed: false,\n        name: '',\n        address: '',\n        email: '',\n        phone: '',\n        transaction: ''\n    };\n    \n    componentWillMount() {\n        let routeName = window.location.pathname,\n            amt = 150;\n        if(routeName === \"/payment-receipt-150\"){\n            amt = 150;\n        } else if(routeName === \"/payment-receipt-250\"){\n            amt = 250;\n        } else if(routeName === \"/payment-receipt-350\"){\n            amt = 350;\n        }\n        this.setState({amount: amt});\n    }\n\n    paymentSucceed(data) {\n        this.setState({isPaymentSucceed: true, transaction: data, isPaymentSucceedModal: true});\n    }\n\n    toggleModal = () => {\n        this.setState(state => ({ isPaymentSucceedModal: !state.isPaymentSucceedModal }));\n    };\n\n    getTodayDate = () => {\n        var today = new Date(),\n            dd = today.getDate(),\n            mm = today.getMonth()+1,\n            yyyy = today.getFullYear();\n        if(dd<10) {\n            dd='0'+dd;\n        } \n\n        if(mm<10) {\n            mm='0'+mm;\n        } \n        var today = mm+'/'+dd+'/'+yyyy;\n        return today;\n    }\n\n    render() {\n        const {name, email, transaction, address, phone, amount, planname, isPaymentSucceed, isPaymentSucceedModal} = this.state;\n        \n        var transactionHTML = <div className='card-value'>NA</div>;\n        if(transaction && transaction.id) {\n            transactionHTML = <div className='card-value'>\n                <img src={transaction.creditCard.imageUrl} alt={transaction.creditCard.cardType} />\n                {transaction.creditCard.cardType}\n            </div>;\n        }\n        return (\n            <>\n            <Helmet>\n                <title>AGM Basements | Basement Renovations | Payment</title>\n                <meta name=\"description\" content=\"AGM Basements has a 4.5-star rating with over 200 Google Reviews as GTA’s top-rated basement renovations we provide 100% customer satisfaction.\" />\n            </Helmet>\n            <GeneralBanner title=\"Payment Receipt\" />\n            \n            <div id=\"payment-receipt-container\" className=\"container\">\n                {\n                    isPaymentSucceed ? null : \n                        <div className=\"row align-items-start\">\n                            <div className=\"col-lg-3\" />\n                            <div className=\"col-lg-6 payment-container\">\n                                <div id=\"card-styles\" className=\"container\">\n                                    <p className=\"card-title card-data\">Client Information:</p>\n                                    <p className=\"card-data payment-reciept\">\n                                        <input ref={input => {\n                                            this['name'] = input;\n                                        }} type='text' className=\"hosted-field\" placeholder=\"Full Name\" onChange={(e) => {\n                                            this.setState({name: e.target.value});\n                                        }} />\n                                        <input ref={input => {\n                                            this['email'] = input;\n                                        }} type='email' className=\"hosted-field\" placeholder=\"email@emailaddress.com\" onChange={(e) => {\n                                            this.setState({email: e.target.value});\n                                        }} />\n                                        <input ref={input => {\n                                            this['address'] = input;\n                                        }} type='text' className=\"hosted-field\" placeholder=\"Address, City, State, Postal Code\" onChange={(e) => {\n                                            this.setState({address: e.target.value});\n                                        }} />\n                                        <input ref={input => {\n                                            this['phone'] = input;\n                                        }} type='phone' className=\"hosted-field\" placeholder=\"416 XXX-XXXX\" onChange={(e) => {\n                                            this.setState({phone: e.target.value});\n                                        }} />\n                                    </p>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3\" />\n                    </div>\n                }\n                <div className=\"row align-items-start mt-2\">\n                    <div className=\"col-lg-12\">\n                        {\n                            isPaymentSucceed ? (\n                                <div className=\"row\">\n                                    <div className=\"col-lg-3\" />\n                                    <div className=\"col-lg-6\">\n                                        <div id=\"card-styles\" className=\"container\">\n                                            <div className='card-label'>Date Recieved</div>\n                                            <div className='card-value'>{this.getTodayDate()}</div>\n                                            <div className='clear' />\n                                            <div className='card-label'>Payment Method</div>\n                                            {transactionHTML}\n                                            <div className='clear' />\n                                            <div className='card-label'>Cheque/Ref. No.</div>\n                                            <div className='card-value'>{transaction && transaction.id}</div>\n                                            <div className='clear' />\n                                            <div className='card-label'>Cost</div>\n                                            <div className='card-value'>${amount.toFixed(2)}</div>\n                                            <div className='clear' />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-lg-3\" />\n                                </div>\n                            ) : <BraintreeComponent name={name} email={email} address={address} phone={phone} amount={amount} planname={planname} paymentSucceed={this.paymentSucceed.bind(this)} />\n                        }\n                    </div>\n                </div>\n                <Modal\n                    isOpen={isPaymentSucceedModal}\n                    onRequestClose={this.toggleModal}\n                    style={customStyles}\n                    shouldCloseOnOverlayClick={true}>\n                    <div className=\"modal-container\">\n                        <div>\n                            <p>Success! Your payment was completed and an email confirmation has been sent.</p>\n                            <div className=\"action-button\" onClick={() => { this.setState({isPaymentSucceedModal: false}) }}>Close</div>\n                        </div>\n                    </div>\n                </Modal>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default PaymentReceipt;\n"]},"metadata":{},"sourceType":"module"}