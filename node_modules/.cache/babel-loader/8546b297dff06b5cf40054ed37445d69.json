{"ast":null,"code":"var _jsxFileName = \"/Users/mathewmozaffari/Desktop/Current Clients/AGM Basements/src/agm-basements-website/src/Containers/Braintree.js\";\nimport React from \"react\";\nimport DropIn from \"braintree-web-drop-in-react\";\n\nclass Braintree extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clientToken: null\n    };\n  }\n\n  async componentDidMount() {\n    // Get a client token for authorization from your server\n    const response = await fetch(\"server.test/client_token\");\n    const clientToken = await response.json(); // If returned as JSON string\n\n    this.setState({\n      clientToken\n    });\n  }\n\n  async buy() {\n    // Send the nonce to your server\n    const _ref = await this.instance.requestPaymentMethod(),\n          nonce = _ref.nonce;\n\n    await fetch(`server.test/purchase/${nonce}`);\n  }\n\n  render() {\n    if (!this.state.clientToken) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Loading...\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(DropIn, {\n        options: {\n          authorization: this.state.clientToken\n        },\n        onInstance: instance => this.instance = instance,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.buy.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Buy\"));\n    }\n  }\n\n}\n\nexport default Braintree;","map":{"version":3,"sources":["/Users/mathewmozaffari/Desktop/Current Clients/AGM Basements/src/agm-basements-website/src/Containers/Braintree.js"],"names":["React","DropIn","Braintree","Component","state","clientToken","componentDidMount","response","fetch","json","setState","buy","instance","requestPaymentMethod","nonce","render","authorization","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAGtCC,KAHsC,GAG9B;AACNC,MAAAA,WAAW,EAAE;AADP,KAH8B;AAAA;;AAOtC,QAAMC,iBAAN,GAA0B;AACxB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAAD,CAA5B;AACA,UAAMH,WAAW,GAAG,MAAME,QAAQ,CAACE,IAAT,EAA1B,CAHwB,CAGmB;;AAE3C,SAAKC,QAAL,CAAc;AACZL,MAAAA;AADY,KAAd;AAGD;;AAED,QAAMM,GAAN,GAAY;AACV;AADU,iBAEQ,MAAM,KAAKC,QAAL,CAAcC,oBAAd,EAFd;AAAA,UAEFC,KAFE,QAEFA,KAFE;;AAGV,UAAMN,KAAK,CAAE,wBAAuBM,KAAM,EAA/B,CAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKX,KAAL,CAAWC,WAAhB,EAA6B;AAC3B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF;AAKD,KAND,MAMO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE;AAAEW,UAAAA,aAAa,EAAE,KAAKZ,KAAL,CAAWC;AAA5B,SADX;AAEE,QAAA,UAAU,EAAEO,QAAQ,IAAK,KAAKA,QAAL,GAAgBA,QAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE;AAAQ,QAAA,OAAO,EAAE,KAAKD,GAAL,CAASM,IAAT,CAAc,IAAd,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADF;AASD;AACF;;AAzCqC;;AA4CxC,eAAef,SAAf","sourcesContent":["import React from \"react\";\nimport DropIn from \"braintree-web-drop-in-react\";\n\nclass Braintree extends React.Component {\n  instance;\n\n  state = {\n    clientToken: null\n  };\n\n  async componentDidMount() {\n    // Get a client token for authorization from your server\n    const response = await fetch(\"server.test/client_token\");\n    const clientToken = await response.json(); // If returned as JSON string\n\n    this.setState({\n      clientToken\n    });\n  }\n\n  async buy() {\n    // Send the nonce to your server\n    const { nonce } = await this.instance.requestPaymentMethod();\n    await fetch(`server.test/purchase/${nonce}`);\n  }\n\n  render() {\n    if (!this.state.clientToken) {\n      return (\n        <div>\n          <h1>Loading...</h1>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <DropIn\n            options={{ authorization: this.state.clientToken }}\n            onInstance={instance => (this.instance = instance)}\n          />\n          <button onClick={this.buy.bind(this)}>Buy</button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Braintree;"]},"metadata":{},"sourceType":"module"}