"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultModalComponents = exports.modalComponents = exports.defaultCarouselComponents = exports.carouselComponents = void 0;

var _Container = _interopRequireDefault(require("./Container"));

var _Footer = _interopRequireWildcard(require("./Footer"));

var _Header = _interopRequireWildcard(require("./Header"));

var _Navigation = require("./Navigation");

var _styled = require("./Modal/styled");

var _View = _interopRequireDefault(require("./View"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var carouselComponents = {
  Container: _Container["default"],
  Footer: _Footer["default"],
  FooterCaption: _Footer.FooterCaption,
  FooterCount: _Footer.FooterCount,
  Header: _Header["default"],
  HeaderClose: _Header.HeaderClose,
  HeaderFullscreen: _Header.HeaderFullscreen,
  Navigation: _Navigation.Navigation,
  NavigationPrev: _Navigation.NavigationPrev,
  NavigationNext: _Navigation.NavigationNext,
  View: _View["default"]
};
exports.carouselComponents = carouselComponents;

var defaultCarouselComponents = function defaultCarouselComponents(providedComponents) {
  return _objectSpread({}, carouselComponents, {}, providedComponents);
}; // ==============================
// Modal
// ==============================


exports.defaultCarouselComponents = defaultCarouselComponents;
var modalComponents = {
  Blanket: _styled.Blanket,
  Positioner: _styled.Positioner,
  Dialog: _styled.Dialog
};
exports.modalComponents = modalComponents;

var defaultModalComponents = function defaultModalComponents(providedComponents) {
  return _objectSpread({}, modalComponents, {}, providedComponents);
};

exports.defaultModalComponents = defaultModalComponents;